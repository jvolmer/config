#+TITLE: Improve appearance
#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs.d/lisp/appearance.el
#+PROPERTY: header-args :mkdirp yes

#+begin_src emacs-lisp
  
  (provide 'appearance)
  
#+end_src

* Frame

Define a theme. Switch themes with ~counsel-load-theme~, more themes are e.g. available with package doom-themes.

#+begin_src emacs-lisp
  
  (load-theme 'dichromacy t)

#+end_src

Setup icons library

#+begin_src emacs-lisp
  
  (use-package nerd-icons)
  
#+end_src

Set up visible bell

#+begin_src emacs-lisp
  
  (setq visible-bell t)

#+end_src

* Menu and toolbar

Disable them

#+begin_src emacs-lisp
  
  (menu-bar-mode -1)           ; Disable the menu bar
  (tool-bar-mode -1)           ; Disable the toolbar
  (scroll-bar-mode -1)         ; Disable visible scrollbar
  
#+end_src

* Fringe

Give some breathing room

#+begin_src emacs-lisp
  
  (set-fringe-mode 10)
  
#+end_src

Add line numbers, except in some modes

#+begin_src emacs-lisp

  (dolist (mode '(compilation-mode-hook
                  org-mode-hook
                  treemacs-mode-hook
                  term-mode-hook
                  shell-mode-hook
                  pdf-view-mode-hook
                  dired-mode-hook))
    (add-hook mode (lambda() (display-line-numbers-mode 0))))

  (global-display-line-numbers-mode t)
  (setq display-line-numbers-type 'relative)
#+end_src

Toggle between line number types

#+begin_src emacs-lisp

  (defun toggle-line-number-type ()
  (interactive)
    ;; set type for new buffers
    (cond
      ((eq display-line-numbers 'relative)
       (setq display-line-numbers-type t))
      ((eq display-line-numbers t)
       (setq display-line-numbers-type 'relative)))
    ;; adapt all existing buffers
    (dolist (buffer (buffer-list))
      (with-current-buffer buffer
        (cond
          ((eq display-line-numbers 'relative)
           (setq display-line-numbers t))
          ((eq display-line-numbers t)
           (setq display-line-numbers 'relative))))))

#+end_src

* Mode line

#+begin_src emacs-lisp
  
  (use-package doom-modeline
    :demand
    :init (doom-modeline-mode 1))
  
#+end_src

Show column and line number in mode line

#+begin_src emacs-lisp
  
  (column-number-mode)
  
#+end_src

* Window

Disable unnecessary stuff

#+begin_src emacs-lisp
  
  (setq inhibit-startup-message t)
  (tooltip-mode -1)
  
#+end_src

Define fonts for default,  fixed and variable pitch types

#+begin_src emacs-lisp
  
  (defvar me/default-font-size 110)
  (setq me/current-font-size me/default-font-size)
  
  (defun me/define-height-for-basic-faces (height)
    (interactive "Nheight: ")
    (dolist (face '(default fixed-pitch variable-pitch))
      (set-face-attribute face nil :height height))
    (setq me/current-font-size height))
  
  (set-face-attribute 'default nil :font "Fira Code Retina")
  (set-face-attribute 'fixed-pitch nil :font "Fira Code Retina")
  (set-face-attribute 'variable-pitch nil :font "Cantarell" :weight 'regular)
  (me/define-height-for-basic-faces me/default-font-size)
  
#+end_src
(see all faces with ~M-x list-faces-display~)

Change font size
#+begin_src emacs-lisp
        
    (me/leader-key
      "f" 'me/adapt-font-size/body)
    
    (defhydra me/adapt-font-size ()
      "Scale font size"
      ("+" (me/define-height-for-basic-faces (+ me/current-font-size 20)) "increase")
      ("-" (me/define-height-for-basic-faces (- me/current-font-size 20)) "shrink")
      ("=" (me/define-height-for-basic-faces me/default-font-size) "default")
      ("q" nil "quit" :exit t))
    
#+end_src

Use rainbow brackets and emphasize open-close brackets in all programming modes

#+begin_src emacs-lisp
  
  (use-package rainbow-delimiters
    :hook (prog-mode . rainbow-delimiters-mode)
    :init (show-paren-mode 1))
  
#+end_src
