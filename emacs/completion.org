#+TITLE: Define completion packages
#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs.d/lisp/completion.el
#+PROPERTY: header-args :mkdirp yes

#+begin_src emacs-lisp
  
  (provide 'completion)
  
#+end_src

* Completion UI

#+begin_src emacs-lisp
  
  (use-package vertico
    :init (vertico-mode)
    :bind (:map vertico-map
                ("C-j" . vertico-next)
                ("C-k" . vertico-previous)
                ("C-f" . vertico-exit)
            :map minibuffer-local-map
                ("M-h" . vertico-directory-up))
    :custom (vertico-cycle t))
  
  (vertico-multiform-mode)
  
  (setq vertico-multiform-categories
    '((consult-grep buffer indexed)))
  
#+end_src

Todo: How to define a command and a keybinding for a specific cateogy, something like:
  ;;          :map counsel-find-file-map
  ;;          ("C-H" . (lambda() (interactive) (ivy--cd "~/"))))) ;; to directly open home

* Annotations / Metainformation 

#+begin_src emacs-lisp

  (use-package marginalia
    :after vertico
    :custom
    (marginalia-annotators '(marginalia-annotators-heavy marginalia-annotators-light nil))
    :init
    (marginalia-mode))

#+end_src

* Search and navigation commands

#+begin_src emacs-lisp
  
  (use-package consult
    :bind (("C-s" . consult-line)
           :map minibuffer-local-map
           ("C-r" . consult-history)))
  
#+end_src

In buffer completions with vertico:
(setq completion-in-region-function #'consult-completion-in-region)
Possibly set ~consult-ripgrep~ to a keybinding
Possibly set ~consult-project-root-function~ to ~projectile-project-root~

* Completion style

#+begin_src emacs-lisp
  (use-package orderless
    :custom
    (completion-styles '(orderless))
    (completion-category-overrides '((file (styles . (partial-completion))))))
  
#+end_src

* Sorting

#+begin_src emacs-lisp

  (use-package savehist
    :ensure nil
    :init
    (savehist-mode))

#+end_src
 
* Ivy

In an  list provided by ivy, ~ivy-dispatching-done~ (~M-o~) gives all available actions for one entry.

Put current list in a new buffer with ~ivy-occur~ (~C-c C-o~). Here, use ~o~ for actions, ~q~ to close.

Don't use one of the ivy options but my own: ~ivy-immediate-done~ (~C-M-j~)
