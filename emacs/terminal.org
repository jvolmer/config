#+TITLE: Terminal modes
#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs.d/lisp/terminal.el
#+PROPERTY: header-args :mkdirp yes

#+begin_src emacs-lisp
  
  (provide 'terminal)
  
#+end_src

* Term

Written in elisp

#+begin_src emacs-lisp
  
  (use-package term
    :commands term
    :custom
    (explicit-shell-file-name "bash")
    ;; look for bash prompt
    (term-prompt-regexp "^[^#$%>\n]*[#$%>] *"))
  
  #+end_src
  
Modes

| term-line-mode | C-c C-j | Keys go through emacs                   |
| term-char-mode | C-c C-k | Almost all keys go to terminal directly |

Naviation

  | term-previous-prompt | C-c C-p |
  | term-next-prompt     | C-c C-n |
  
Use more colors

#+begin_src emacs-lisp
   
   (use-package eterm-256color
     :hook (term-mode . eterm-256color-mode))
   
#+end_src

* Ansi-term

Specialization of term-mode
Can directly create several buffers
Have C-x available in char-mode

* vterm

Uses compiled library: faster than term-mode

Very good for linux

* shell

Is no terminal emulator but more emacs like
~counsel-shell-history~ for searchable history

On Windows almost only option

* Eshell

Fully written in elisp
Can run elisp commands directly in the shell

#+begin_src emacs-lisp
    
    (defun ec/configure-eshell ()
      ;; Save command history when commands are entered
      (add-hook 'eshell-pre-command-hook 'eshell-save-some-history)
    
      ;; Truncate buffer for performance to eshell-buffer-maximum-lines
      (add-to-list 'eshell-output-filter-functions 'eshell-truncate-buffer)
    
      (setq eshell-history-size         10000
            eshell-buffer-maximum-lines 10000
            ;; same commands in sequence are not saved
            eshell-hist-ignoredups t
            eshell-scroll-to-bottom-on-input t)
    
      (general-define-key
       :keymap 'eshell-mode-map "C-r" 'counsel-esh-history)
    )
    
    (use-package eshell
      :hook (eshell-first-time-mode . ec/configure-eshell)
      :config
      (eshell-git-prompt-use-theme 'robbyrussel)
      (with-eval-after-load 'esh-opt
        (setq eshell-destroy-buffer-when-process-dies t)
        ;; open these in term-mode
        (setq eshell-visual-commands '("htop" "zsh" "vim"))))
    
    (use-package eshell-git-prompt
      :after eshell)
    
    
#+end_src

You can define aliases for emacs commands, e.g.
~alias ffo "find-file-another-window $1~, now use it with ~ffo <buffer-name> to go to this buffer

You can pipe directly to a buffer
~echo "Hello!" > #<buffer test-buffer>~

https://ambrevar.xyz/emacs-eshell/index.html
