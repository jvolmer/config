#+TITLE: Error Handling 
#+PROPERTY: header-args:lua :tangle ~/.config/awesome/error_handling.lua
#+PROPERTY: header-args :mkdirp yes

#+begin_src lua
  local naughty = require("naughty")
#+end_src

* Fallback during startup
Check if awesome encountered an error during startup and fell back to another config (This code will only ever execute for the fallback config)

#+begin_src lua
    
  if awesome.startup_errors then
      naughty.notify({ preset = naughty.config.presets.critical,
                       title = "Oops, there were errors during startup!",
                       text = awesome.startup_errors })
  end
    
#+end_src

* Handle runtime errors after startup

#+begin_src lua
    
  do
      local in_error = false
      awesome.connect_signal("debug::error", function (err)
          -- Make sure we don't go into an endless error loop
          if in_error then return end
          in_error = true
  
          naughty.notify({ preset = naughty.config.presets.critical,
                           title = "Oops, an error happened!",
                           text = tostring(err) })
          in_error = false
      end)
  end
    
#+end_src
